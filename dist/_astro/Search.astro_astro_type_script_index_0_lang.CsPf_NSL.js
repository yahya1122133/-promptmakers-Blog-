let a=[],c;document.addEventListener("DOMContentLoaded",async function(){await f(),y()});async function f(){try{const e=await fetch("/search-data.json");e.ok?a=await e.json():a=p()}catch{console.log("Search data not available, using fallback"),a=p()}}function p(){return[{title:"5 Hacks for Insanely Good AI Prompts (That Actually Work)",description:"Tired of generic AI responses? Stop getting garbage results. Learn 5 simple prompt engineering hacks to write better prompts for ChatGPT, Gemini, and get the exact output you want.",url:"/blog/5-hacks-insanely-good-ai-prompts",tags:["prompt-engineering","chatgpt","gemini","ai-tips","productivity"],date:"2025-09-01"},{title:"Prompt Engineering 101: The Complete Beginner's Guide to Talking to AI",description:"New to AI prompting? Learn the fundamental principles of prompt engineering with practical examples. Master clear instructions, context, examples, and constraints to get better AI results.",url:"/blog/prompt-engineering-101-basics",tags:["prompt-engineering","beginners","ai-basics","tutorial"],date:"2025-08-31"},{title:"The CLEAR Framework: Your Blueprint for Crafting Effective AI Prompts",description:"Master the CLEAR framework for prompt engineering: Clear, Logical, Explicit, Actionable, and Relevant. Learn how to structure prompts that get consistent, high-quality AI results every time.",url:"/blog/clear-framework-effective-prompts",tags:["prompt-engineering","framework","methodology","ai-optimization"],date:"2025-08-29"},{title:"Mastering Prompt Templates: How to Build Reusable AI Workflows",description:"Learn how to create powerful, reusable prompt templates that save time and improve consistency. Discover template variables, best practices, and how to build a professional prompt library.",url:"/blog/mastering-prompt-templates",tags:["prompt-engineering","templates","workflow","productivity","automation"],date:"2025-08-28"},{title:"ChatGPT vs Gemini vs Claude: The Ultimate AI Model Comparison for Prompt Engineers",description:"Discover which AI model works best for your specific needs. Compare ChatGPT, Google Gemini, and Anthropic Claude across different prompt engineering scenarios with practical examples and performance insights.",url:"/blog/chatgpt-vs-gemini-vs-claude",tags:["chatgpt","gemini","claude","ai-comparison","model-selection","prompt-engineering"],date:"2025-08-27"}]}function y(){const e=document.getElementById("search-input"),t=document.getElementById("clear-search");document.getElementById("search-results"),e&&(e.addEventListener("input",function(n){const i=n.target.value.trim();if(i.length===0){o(),t.style.display="none";return}t.style.display="block",clearTimeout(c),c=setTimeout(()=>{v(i)},300)}),t.addEventListener("click",function(){e.value="",o(),t.style.display="none",e.focus()}),document.addEventListener("click",function(n){n.target.closest(".search-container")||o()}))}function v(e){const t=a.filter(n=>`${n.title} ${n.description} ${n.tags.join(" ")}`.toLowerCase().includes(e.toLowerCase()));b(t,e)}function b(e,t){const n=document.getElementById("search-results"),i=document.getElementById("results-count"),g=document.getElementById("search-term"),r=document.getElementById("results-list"),l=document.getElementById("no-results");if(n){if(n.style.display="block",i.textContent=`${e.length} result${e.length!==1?"s":""}`,g.textContent=`for "${t}"`,e.length===0){r.style.display="none",l.style.display="block";return}r.style.display="block",l.style.display="none",r.innerHTML=e.map(s=>{const u=d(s.title,t),m=d(s.description,t);return`
        <a href="${s.url}" class="result-item">
          <div class="result-title">${u}</div>
          <div class="result-description">${m}</div>
          <div class="result-meta">
            <span>${new Date(s.date).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}</span>
            ${s.tags.slice(0,2).map(h=>`<span class="result-tag">#${h}</span>`).join("")}
          </div>
        </a>
      `}).join("")}}function d(e,t){const n=new RegExp(`(${t})`,"gi");return e.replace(n,'<span class="highlight">$1</span>')}function o(){const e=document.getElementById("search-results");e&&(e.style.display="none")}
